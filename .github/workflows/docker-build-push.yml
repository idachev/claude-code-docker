name: Docker Build and Push

on:
  schedule:
    # Run every 12 hours at 00:00 and 12:00 UTC
    - cron: '0 */12 * * *'
  workflow_dispatch: # Allow manual triggering

env:
  IGD_UTILS_REMOTE_DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  IGD_UTILS_DOCKER_IMG: ${{ secrets.DOCKER_IMAGE_NAME }}
  IGD_UTILS_DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for tags

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get latest version and increment
      id: version
      run: |
        # Get the latest tag, default to v0.1.0 if no tags exist
        LATEST_TAG=$(git tag --list --sort=-version:refname | head -1)
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG="v0.1.0"
        fi
        
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version numbers (remove 'v' prefix)
        VERSION=${LATEST_TAG#v}
        
        # Split version into parts
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        
        # Increment patch version
        PATCH=$((PATCH + 1))
        
        # Create new version
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        NEW_TAG="v$NEW_VERSION"
        
        echo "New version: $NEW_VERSION"
        echo "New tag: $NEW_TAG"
        
        # Set outputs for next steps
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

    - name: Create and push new tag
      run: |
        git tag ${{ steps.version.outputs.tag }}
        git push origin ${{ steps.version.outputs.tag }}

    - name: Build Docker image
      run: |
        chmod +x ./docker-build.sh
        ./docker-build.sh ${{ steps.version.outputs.version }} latest

    - name: Push Docker image
      run: |
        chmod +x ./docker-push.sh
        ./docker-push.sh ${{ steps.version.outputs.version }} latest

    - name: Output build info
      run: |
        echo "Built and pushed Docker image with tags:"
        echo "- ${{ steps.version.outputs.version }}"
        echo "- latest"
